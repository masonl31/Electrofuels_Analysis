* This file was written by BUI 28-04-2014 14:41 based on User's choices of option Values in BUI.

* This file holds options that are used to control model functionality,
* including extentions in the form of addons, and interplay between models.

* Note: in final version all relevant control settings will be indicated
* by an *!option statement, e.g. "*!option yes" and other instructions.

* Note: If you work with BUI, the above is mandatory.
* Moreover, the only way to enter a comment in this file
* is to use a '*' as the first character on the line;
* thus, you can not use e.g., $ontext..$offtext or /*..*/ or // or !!.
* Further, if you work with BUI, this file will not be $included into Balmorel.gms,
* instead the file Balopt.bui will be $included. See the description elsewhere.



*===============================================================================
*===============================================================================
* Project and Case ID:
*===============================================================================
*===============================================================================

* PROJECTID is the identification of the Project.
* Convenient, and additioanally needed if results shall be compared among projects.
*
$setglobal PROJECTID
*!option !fixedvalue
*
*
* CASEID is the Case identification string. It can be assigned freely, however, if
* the case is a base case to which other cases should be compared the name should be
* BASE. Normally the model in the base directory will be called BASE while
* any variants will have names as appropriate. Model results in the form of GDX files
* (or Access MDBs) will have the CASEID as filename with the appropriate extension.
*
*
$setglobal CASEID BASE
*!option !fixedvalue


*===============================================================================
*===============================================================================
* Model choices:
*===============================================================================
*===============================================================================

*-------------------------------------------------------------------------------
* The following global variables concern the choice of model.
* If $Setglobal bb1 yes, the usual (S,T) time segments and no endogenous investment are chosen.
* If $Setglobal bb2 yes, the usual (S,T) time segments and endogenous investment are chosen.
* If $Setglobal bb3 yes, the no endogenous investment, forwards simulation is chosen.
* Exactly one of the following Setgbobals must be assigned yes.
*
* bb1: use model BALBASE1: optimisation simultaneuosly for all (S,T) in a year, exogenous investments.
$setglobal bb1
*!option yes      !notif %BB2%==yes  !notif %BB3%==yes  !notif %BB4%==yes
* bb2: use model BALBASE2: optimisation simultaneuosly for all (S,T) in a year, exogenous and endogenous investments.
$setglobal bb2 yes
*!option yes      !notif %BB1%==yes  !notif %BB3%==yes  !notif %BB4%==yes
* bb3: use model BALBASE3: optimisation of one season at a time, forwards through S, exogenous investments.
$setglobal bb3
*!option yes      !notif %BB1%==yes  !notif %BB2%==yes  !notif %BB4%==yes
$setglobal bb4
*!option yes      !notif %BB1%==yes  !notif %BB2%==yes  !notif %BB3%==yes

*$setglobal useguss


*===============================================================================
*===============================================================================
* Basic models details and Addon modules:
*===============================================================================
*===============================================================================

*-------------------------------------------------------------------------------
* The following global variables concern the choice of details in some of the models.
* Note that some of the choices are mutually dependent.


* Disable investments in electricity transmission capacity
$setglobal NOELTRANSINV
*!option yes


* Allow wind turbines to shut down
$setglobal WNDSHUTDOWN yes
*!option yes

***Davide: In Balmorel version 2.14 Alpha (november 2007) the following variables
** determine the inclusion of areas and regions.

* This variable includes individual heating areas
$Setglobal FV

* This variable includes electric transport regions, representing consumption of electricity by the transportation sector.
$Setglobal ETrans yes

* This variable includes biofuel regions and areas, representing consumption of electricity and heating by biofuel production.
$Setglobal Biofuel

*-------------------------------------------------------------------------------
* The following global variables concern the choice of add-on modules to include.
* Include a module by assigning   yes .
* Note that some of the choices are mutually dependent.

* Presently some of the addons are commented out -
* they may or may not be working (at least with an appropriate data set),
* however, it has not been checked. Please take contact if problems.

* Combine two technologies to one to achieve e.g. multifuel characteristics.
$setglobal COMBTECH yes
*!option yes


* Linkage with OptiFlow model.
$setglobal OPTIFLOW yes
*!option yes


* Permit exchange of electricity with third regions using a price interface (in contrast to X3FX)
$setglobal X3V
*!option yes

*
$setglobal POLICIES
*!option yes

*
$setglobal SYSTEMCONST
*!option yes

* PLANTCLOSURES indicates that technology is decomissioned on the basis of profitability.
* When revenues can no longer cover both variable and fixed operating costs, capacity is decomissioned.
$setglobal PLANTCLOSURES
*!option yes

* Differentiate yield requirements for different technologies.
$setglobal YIELDREQUIREMENT
*!option yes

* Permit heat transmission between areas.
$setglobal HEATTRANS
*!option yes

* Renewable energy share in electricity generation.
$setglobal REShareE
*!option yes
*!notif %REShareEH%==yes
*
* Renewable energy share in heat generation.
$setglobal REShareEH
*!option yes
*!notif %REShareE%==yes

* Include individual heating areas.
$setglobal FV
*!option yes

* Make investments in technologies only at specified capcities.
$setglobal AGKNDISC
*!option yes
*!onlyif %BB2%==yes
*!onlyif %solvemip%==yes

* Set demands for hydrogen consumption.
$Setglobal H2 yes
*!option yes

* Set calculation of electricity marginals.
$Setglobal Marg_E
*!option yes

* Set calculation of heat marginals.
$Setglobal Marg_H yes
*!option yes

* Bypass of 'turbine' (electricity production) on backpressure units
$setglobal bypass yes
*!option yes

*-------------------------------------------------------------------------------
* Unit Commitment:
* overall control variable UnitComm must be 'yes' if any of the other unit commitment controls are:
$setglobal UnitComm
*!option yes
* The simplest possible: ...
$setglobal UnitC0
*!option yes
* Basic version; mindowntime, minuptime, startcost, shutdcost, minimal production-when-on:
$setglobal UnitCmin
*!option yes
* Adds ramping, including during startup and shutdown; requires '$setglobal UnitCmin yes':
$setglobal UnitCramp
*!option yes
* Adds a start cost curve that depends on the number of hours the unit has been off; requires '$setglobal UnitCmin yes':
$setglobal UnitCscc
*!option yes
* The production interval is segmented into a number of disjunct pieces, each with its own costs: NOT IMPLEMENTED
$setglobal UnitCseg
*!option yes




* Calibrate the price side of electricity demand
$setglobal DEFPCALIB
*!option yes
*
* Calibrate the price side of heat demand
$setglobal DHFPCALIB
*!option yes


*===============================================================================
*===============================================================================
* Relative paths
*===============================================================================
*===============================================================================
* No choices, they must be set as shown. Note the format.
* They are to be used as illustrated below and elsewhere in the code.
*
$setglobal relpathModel ""
*!fixedvalue
$setglobal relpathoutput "..\output\"
*!fixedvalue
$setglobal relpathInputdata2GDX "..\output\inputout\"
*!fixedvalue
$setglobal relpathtemp "..\output\temp\"
*!fixedvalue


*===============================================================================
*===============================================================================
* Some interaction between models:
*===============================================================================
*===============================================================================
* The following options are related to interplay between models,
* e.g. one model output serving as input to another model.
*
* ------------------------------------------------------------------------------
* For model BB3 it is possible to use values found from BB1 or BB2 solutions to specify use of hydro power
* that corresponds (possibly approximately) to that found in a BB1 or BB2 solution.
$setglobal HYRSBB123 none
*!option quant         !Text "Use seasonal quantities of hydro generation (from HYRSG.gdx??) in BB3 ('primal decomposition')"
*!mayif %BB3%==yes
*!option price         !Text "Use seasonal prices for hydro generation (from WATERVAL.gdx) in BB3 ('dual decomposition')"
*!mayif %BB3%==yes
*!option quantprice    !Text "Use seasonal quantities and prices for hydro generation (from HYRSG.gdx?? and WATERVAL.gdx) in BB3"
*!mayif %BB3%==yes
*!option none          !Text "Do not not use this hydro addon"
*!mustif not %BB3%==yes
$ifi not %BB3%==yes   $setglobal HYRSBB123 none



*-------------------------------------------------------------------------------
* Options timeaggr control automatic aggregation of time segments.
*
$setglobal timeaggr
*!option yes


*-------------------------------------------------------------------------------
* Make investments
* Used in a BB2 model to generate additional capacity for other models
$setglobal MAKEINVEST
*!option yes

* Used in a BB1 or BB3 model to load investments as generated in BB2
$setglobal ADDINVEST
*!option yes

$ifi     %bb2%==yes $Setglobal ADDINVEST no
$ifi not %bb2%==yes $Setglobal MAKEINVEST no


*===============================================================================
*===============================================================================
* Output:
*===============================================================================
*===============================================================================

* ------------------------------------------------------------------------------
* Alternative presentations of input data
* ------------------------------------------------------------------------------

* It may be convenient under some circumstances to have the applied input data in other forms,
* this may be achieved by the following mechanism.

* Make a summary of the input data in text format to file inputout.out:
$setglobal inputdatatxt yes
*!option ""          !text do not make it
*!option yes         !text make it when solving
*!option yesnosolve  !text make it but do not solve


* Save the input data in gdx format for further processing by Gdx utilities,
* e.g. viewing (Gdxviewer), comparing (Gdxdiff), or transferring to other data formats like Excel or Access.
* Note that this will be done as a  compile time operation,
* such that only the 'direct' data definitions (and no assignments) are reflected.
$setglobal INPUTDATA2GDX
*!option yes


* Transfer the input data in gdx format to a Microsoft Access database  ..\output\inputout\inputdataout.mdb:
$setglobal INPUTDATAGDX2MDB
*!option yes    !onlyif  %INPUTDATA2GDX%==yes
* Note: if you have established a link from another Access database to inputdataout.mdb
* close all tables in it before executing Balmorel in order to ensure updating of the links.


* Transfer the input data in gdx format to Microsoft Excel format:
* NOTWORKING: we are waiting for GAMS version 22.7, which has better support for this.
$setglobal INPUTDATAGDX2XLS
*!option  yes


*-------------------------------------------------------------------------------
* Output from model solutions:
*-------------------------------------------------------------------------------

* Make some output in text format to show some results of an execution.
* The detailed code for the writing of the files is given in /output/printout/printinc.
* Setting "yes" for PRINTFILES will make some standard printout files to folder \output\printout\.
$setglobal PRINTFILES
*!option yes

* PRINTSEPARATOR is a single character used for separating columns in printfiles,
* convenient e.g. to use ';' for copy-paste to Excel.
$setglobal PRINTSEPARATOR ';'
*!option ' '
*!option ';'
*!option ','

*-------------------------------------------------------------------------------
*-------------------------------------------------------------------------------
*-------------------------------------------------------------------------------

* The following will establish a mechanism that will save annual optimization results
* from bb1 and bb2 (seasonal for bb3) as gdx files; at the end they may be merged to one gdx file.
* This merged file may then be transferred to an Access database or to Excel.
* It is to be seen in conjunction with saving annual results in file bb123.sim,
* which is accomplished using savepoint with value 1, cf '$Setglobal SAVEPOINTVALUE'.
*
* The following closely linked controls are used:
* SAVEPOINTVALUE, cf. above
* MERGESAVEPOINTRESULTS
* MERGEDSAVEPOINTRESULTS2MDB
* MERGEDSAVEPOINTRESULTS2XLS: presently not working, we are waiting for GAMS version 22.7, which has better support for this.
*
* Savepoint: the GAMS command "Modelname.Savepoint=number;"
* The savepoint attribute tells GAMS to save a GDX file that contains the information on the current solution point.
* One can save the information from just the last solve or from every solve.
* The points that are saved can be used to provide an advanced basis, an integer program starting point or a NLP starting point.
* Numeric input is expected with the allowable numeric values being:
* 0 no point gdx file is to be saved
* 1 a point gdx file is to be saved from the last solve in the GAMS model
* 2 a point gdx file is to be saved from every solve in the GAMS model
* The value specified by $Setglobal SAVEPOINTVALUE will be used for savepoint.
* To be used with subsequent handling of output.
*
$setglobal SAVEPOINTVALUE 0
*!option 0
*!option 1   !mustif  %MERGESAVEPOINTRESULTS%==yes  !mustif  %MERGEDSAVEPOINTRESULTS2GDX%==yes
*!option 2   !text Note: nothing implemented nor tested, so do not use it.
*
*
* In order not to confuse results from different executions, delete all old gdx-files:
$ifi %SAVEPOINTVALUE%==1  execute "del %relpathModel%..\output\temp\*.gdx";


* Use the $setglobal MERGESAVEPOINTRESULTS to choose whether to merge annual/seasonal results or not:
$setglobal MERGESAVEPOINTRESULTS
*!option yes  !onlyif  %SAVEPOINTVALUE%==1
* Note: make sure that it is possible to make the new merged gdx file,
* e.g. make sure that the file *.gdx is not open in another application (like GAMD IDE).
*
* Then prepare for the necessary details:
$setglobal batfileMERGESAVEPOINTRESULTS %relpathModel%MERGESAVEPOINTRESULTS.bat
*!option !fixedvalue
file     fileMERGESAVEPOINTRESULTSbat /  %batfileMERGESAVEPOINTRESULTS%  /;
putclose fileMERGESAVEPOINTRESULTSbat;


* The following is a clean-up in relation to previous runs.
$ifi %SAVEPOINTVALUE%==1  execute "del %relpathModel%*.gdx";


$setglobal MERGEDSAVEPOINTRESULTS2MDB
*!option yes    !onlyif %SAVEPOINTVALUE%==1  !onlyif %MERGESAVEPOINTRESULTS%==yes


*-------------------------------------------------------------------------------
* Comparison between Cases:
*-------------------------------------------------------------------------------

* COMPAREWITH defines the folder(.) to look for the case with which to merge results.
* If the case is in the output folder of variant 'myvariant' ......
* options to "VARIANT" (without the quotes).
* COMPARECASE defines the name of the case in that folder.
* If COMPARECASE is NONE, then the case is not merged with other cases.
*
$setglobal COMPAREWITH BASE
*!option !fixedvalue
$setglobal COMPARECASE NONE
*!option !fixedvalue
*
* The following will merge (or compare) two results, of which one (presently) is the base case
* (from which follows that it only makes sense if the present case as not the base case.)
* With  "$Setglobal comparewithbase yes" this will be done, otherwise not.
* If done, the result will be placed in .. , in the form of a GDX file.
* [With "$Setglobal ..." this may then be transferred to a MDB file]
$setglobal COMPAREWITHBASE
*!option yes
*
* Then prepare for the necessary details:
$setglobal batfileCOMPAREWITHBASE %relpathModel%COMPAREWITHBASE.bat
*!option !fixedvalue
file     fileCOMPAREWITHBASEbat /  %batfileCOMPAREWITHBASE%  /;
putclose fileCOMPAREWITHBASEbat;     /*overflodig?*/




*===============================================================================
*===============================================================================
* The model type's implication for solver type
*===============================================================================
*===============================================================================

* The model type has implications for the solver type.
* Classical model types are LP (Linear Programming), QP (Quadratic Programming), MIP (Mixed Integer Progtramming).
$setglobal SOLVEMIP yes
*!option yes
*!mustif %AGKNDISC%==yes
*!mustif %UnitComm%==yes



*===============================================================================
*===============================================================================
* Input data:
*===============================================================================
*===============================================================================

*-------------------------------------------------------------------------------
*-------------------------------------------------------------------------------
* Option semislash is used to control input data format for text files.
* With "$Setglobal semislash ;" the input files must include
* the declaration statement initially and must terminate with a "/;".
* With "$Setglobal semislash /" the input files do not contain this, but only data.
* Note that parameters and tables are identical declarations, however,
* when using "$Setglobal semislash /" make sure
* that the use of either "parameter" or "table" in Balmorel.gms for any data file
* corresponds to the data format used in the file.
* NOTE: Rev.2.14: Not fully implemented yet, you MUST use "$Setglobal semislash ;".
$setglobal semislash ";"
*!fixedvalue ;
**!option ;




* Domain overloading: thE options specofy the domain (indexes) that the identifiyer is declared on.
$setglobal GMINF_DOL CCCRRRAAA_FFF
*!option  CCCRRRAAA_FFF
*!option  YYY_CCCRRRAAA_FFF
*
$setglobal GMAXF_DOL YYY_CCCRRRAAA_FFF
*!option  CCCRRRAAA_FFF
*!option  YYY_CCCRRRAAA_FFF
*
$setglobal GEQF_DOL YYY_CCCRRRAAA_FFF
*!option  CCCRRRAAA_FFF
*!option  YYY_CCCRRRAAA_FFF
*
$setglobal XKRATE_DOL IRRRE_IRRRI_SSS_TTT
*!option  IRRRE_IRRRI
*!option  IRRRE_IRRRI_SSS
*!option  IRRRE_IRRRI_SSS_TTT
*
$setglobal GKRATE_DOL AAA_GGG_SSS
*!option  AAA_GGG_SSS
*!option  AAA_GGG_SSS_TTT



*-------------------------------------------------------------------------------
* End of Balopt.opt
*-------------------------------------------------------------------------------
